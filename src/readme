1.对于空值没定义默认值
2.应该在生成表的地方提供
3.验证导csv的方式(选择java生成吧))

public static void writeCSV() {
  // 定义一个CSV路径
  String csvFilePath = "D://StemQ.csv";
  try {
    // 创建CSV写对象 例如:CsvWriter(文件路径，分隔符，编码格式);
    CsvWriter csvWriter = new CsvWriter(csvFilePath, ',', Charset.forName("UTF-8"));
    // 写表头
    String[] csvHeaders = { "编号", "姓名", "年龄" };
    csvWriter.writeRecord(csvHeaders);
    // 写内容
    for (int i = 0; i < 20; i++) {
      String[] csvContent = { i + "000000", "StemQ", "1" + i };
      csvWriter.writeRecord(csvContent);
    }
    csvWriter.close();
    System.out.println("--------CSV文件已经写入--------");
  } catch (IOException e) {
    e.printStackTrace();
  }
}


方式一

-DpropName=propValue的形式携带，要放在-jar参数前面，亲测，放在它后面好像取不到值

java -fileName=JOURNAL_TREENODE_DATA-20190404174502.txt -DprocessType=1 -jar dataProcess.jar
System.getProperty("propName")用来取值

 

方式二

参数直接跟在命令后面，多个参数之间用空格隔开

java -jar dataProcess.jar JOURNAL_TREENODE_DATA-20190404174502.txt processType=1

	public static void Exp2CSV(String file, String[] args) {
		try {
			Options options = new Options();
			options.addOption(new Option("t", "text", true, "use given information(String)"));
			options.addOption(new Option("b", false, "display current time(boolean)"));
			options.addOption(new Option("s", "size", true, "use given size(Integer)"));
			options.addOption(new Option("f", "file", true, "use given file(File)"));

			@SuppressWarnings("static-access")
			// Option property = OptionBuilder.withArgName("property=value").hasArgs().withValueSeparator()
			Option property = OptionBuilder.withArgName("property=value").hasArgs(2).withValueSeparator()
					.withDescription("use value for given property(property=value)").create("D");
			property.setRequired(true);
			options.addOption(property);

			// print usage
			HelpFormatter formatter = new HelpFormatter();
			formatter.printHelp("AntOptsCommonsCLI", options);
			System.out.println();

			// create the command line parser
			CommandLineParser parser = new GnuParser();
			CommandLine cmd = parser.parse(options, args);

			// check the options have been set correctly
			System.out.println(cmd.getOptionValue("t"));
			System.out.println(cmd.getOptionValue("f"));
			if (cmd.hasOption("b")) {
				System.out.println(new Date());
			}
			System.out.println(cmd.getOptionValue("s"));
			System.out.println(cmd.getOptionProperties("D").getProperty("key1"));
			// System.out.println(cmd.getOptionProperties("D").getProperty("key2"));

		} catch (Exception ex) {
			System.out.println("Unexpected exception:" + ex.getMessage());
		}
	}

cd ../target
java -jar aml-1.0-SNAPSHOT.jar -DWorkDay=20190101 -txls -f"wine.xls"

		String oldSQL = pps.getProperty(Key+"_Title");
		System.out.println("propdddddd");
		if (oldSQL.isEmpty()) {
			return "";
		}

java -jar target/aml-1.0-SNAPSHOT.jar -DWorkDay=20190101 -tcsv -f"/app/work/aml-java/target/"
tar -czvf aml.tar.gz *.csv

   Map<String, Object> map = new HashMap<String, Object>();

    map.put("key1", "value1");

    map.put("key2", "value2");

    map.put("key3", "value3"); 

    String[] keySet = map.keySet().toArray(new String[0]);

	MySqlNullCheckedResultSet